package es.ua.dlsi.im3.core.score.io.abstractmodel;

import es.ua.dlsi.im3.core.score.Time;

public class AMTimeSignature extends AMTimedElement implements IAMElementWithStaff {
	private String beats;
	private String beatType;
	private String symbol;
	private AMStaff staff;

	public AMTimeSignature(int originalPosition, Time time) {
		super(originalPosition, time);
	}
	
	public String getSymbol() {
		return symbol;
	}

	public void setSymbol(String symbol) {
		this.symbol = symbol;
	}

	public String getBeats() {
		return beats;
	}
	public void setBeats(String beats) {
		this.beats = beats;
	}
	public String getBeatType() {
		return beatType;
	}
	public void setBeatType(String beatType) {
		this.beatType = beatType;
	}

	public AMStaff getStaff() {
		return staff;
	}

	public void setStaff(AMStaff staff) {
		this.staff = staff;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = super.hashCode();
		result = prime * result + ((beatType == null) ? 0 : beatType.hashCode());
		result = prime * result + ((beats == null) ? 0 : beats.hashCode());
		result = prime * result + ((symbol == null) ? 0 : symbol.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (!super.equals(obj))
			return false;
		if (getClass() != obj.getClass())
			return false;
		AMTimeSignature other = (AMTimeSignature) obj;
		if (beatType == null) {
			if (other.beatType != null)
				return false;
		} else if (!beatType.equals(other.beatType))
			return false;
		if (beats == null) {
			if (other.beats != null)
				return false;
		} else if (!beats.equals(other.beats))
			return false;
		if (symbol == null) {
			if (other.symbol != null)
				return false;
		} else if (!symbol.equals(other.symbol))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "AMTimeSignature [beats=" + beats + ", beatType=" + beatType + ", symbol=" + symbol + "]";
	}
	
	
	
	
}
