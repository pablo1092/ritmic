package es.ua.dlsi.im3.core.score.io.abstractmodel;

import es.ua.dlsi.im3.core.score.PositionAboveBelow;

public abstract class AMHairpin implements IAMConnector {
	AMTimedElement from;
	AMTimedElement to;
	PositionAboveBelow placement;
	
	public AMTimedElement getFrom() {
		return from;
	}
	public void setFrom(AMTimedElement from) {
		this.from = from;
	}
	public AMTimedElement getTo() {
		return to;
	}
	public void setTo(AMTimedElement to) {
		this.to = to;
	}
	public PositionAboveBelow getPlacement() {
		return placement;
	}
	public void setPlacement(PositionAboveBelow placement) {
		this.placement = placement;
	}
	@Override
	public String toString() {
		return "AMHairpin [from=" + from + ", to=" + to + ", placement=" + placement + "]";
	}
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((from == null) ? 0 : from.hashCode());
		result = prime * result + ((placement == null) ? 0 : placement.hashCode());
		result = prime * result + ((to == null) ? 0 : to.hashCode());
		return result;
	}
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		AMHairpin other = (AMHairpin) obj;
		if (from == null) {
			if (other.from != null)
				return false;
		} else if (!from.equals(other.from))
			return false;
		if (placement != other.placement)
			return false;
		if (to == null) {
			if (other.to != null)
				return false;
		} else if (!to.equals(other.to))
			return false;
		return true;
	}

	
}
