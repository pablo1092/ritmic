package es.ua.dlsi.im3.core.score.io.abstractmodel;

import java.util.TreeSet;

import es.ua.dlsi.im3.core.score.NotationType;

public class AMStaff {
	Integer lines;
	String type;
	String number;
	NotationType notationType;
	
	/**
	 * Layers found in element declarations such as notes
	 */
	TreeSet<String> layers;
	private String name;
	
	//unimplemented tuning and frets
	public AMStaff(String number) {
		super();
		this.number = number;
	}

	public String getNumber() {
		return number;
	}

	public String getType() {
		return type;
	}
	public Integer getLines() {
		return lines;
	}
	public void setLines(Integer lines) {
		this.lines = lines;
	}
	public void setType(String type) {
		this.type = type;
	}
	public void addLayer(String layer) {
		if (layers == null) {
			layers = new TreeSet<>();
		}
		layers.add(layer);
	}

	public TreeSet<String> getLayers() {
		return layers;
	}

	@Override
	public String toString() {
		return "AMStaff [lines=" + lines + ", type=" + type + ", number=" + number + ", layers=" + layers + "]";
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((lines == null) ? 0 : lines.hashCode());
		result = prime * result + ((number == null) ? 0 : number.hashCode());
		result = prime * result + ((type == null) ? 0 : type.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		AMStaff other = (AMStaff) obj;
		if (lines == null) {
			if (other.lines != null)
				return false;
		} else if (!lines.equals(other.lines))
			return false;
		if (number == null) {
			if (other.number != null)
				return false;
		} else if (!number.equals(other.number))
			return false;
		if (type == null) {
			if (other.type != null)
				return false;
		} else if (!type.equals(other.type))
			return false;
		return true;
	}

	public final NotationType getNotationType() {
		return notationType;
	}

	public final void setNotationType(NotationType notationType) {
		this.notationType = notationType;
	}

	public void setName(String name) {
		this.name = name;		
	}

	public final String getName() {
		return name;
	}
	
	
	

	
	
	
}
